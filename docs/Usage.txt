Usage document for PC3

Server:
    Available to all users:
     - authenticate client
     - request scoring table
     - request a listing of problems
     - request a problem's description
     
    Also available to team clients:
     - run team solutions and add to score
     - request results of previous runs

    Also Available to supervisor clients:
     - override a team's completion state or score on a problem
     - request active scoring runs
     - kill a team's scoring run (presumably malfunctioning)
    
Client:
    Available to all users:
     - Login
     - Logout
     - view scores
     - view problems+descriptions
     
    Also Available to teams:
     - submit scoring run
     - view pass/fail/time and errors for previous submissions
     
    Also Available to supervisors:
     - view active scoring runs
     - request certain scoring run be killed
     - request score change for a team for a problem
     
Use cases:
    User is logged in to the system:
    <- client displays verification of username and password authentication
    <- server sends verification of authentication and userlevel
    <- server authenticates username and password, adding username to session
    <- client requests server to authenticate username and password
    <- user   submits username and password to client
    <- client prompts user for username and password
    <- user   loads client
    <- server sends client page to user
    <- user   requests client from server
    
    User is logged out of the system:
    <- client receives verification of logout from server (presumably redirects to login)
    <- server removes username from session
    <- client sends logout request to server
    <- user   requests client to logout
    
    User sees scores
    <- client displays score table
    <- client receives score table from server
    <- server sends score table
    <- client requests score table from server
    <- user   requests client to view scores
    <- user   is logged in
    
    Team has confirmation of scoring run
    <- client displays confirmation of scoring run completion
    <- server sends confirmation of scoring run to client and logs results
    <- server runs team's code
    <- client sends team's code to server
    <- team   requests client to send scoring run
    <- user   is logged in as a team
    
    Team sees previous results
    <- client displays previous results
    <- server sends previous results to client
    <- client requests server for previous results
    <- team   requests client for previous results
    <- user   is logged in as a team
    
    User sees problem list
    <- client displays list of problems
    <- server sends list of problems to client
    <- client requests server for problem listing
    <- user   requests client for list of problems
    <- user   is logged in
    
    User sees problem description
    <- client displays problem description
    <- server sends problem description to client
    <- client requests server for a problem description
    <- user   requests client for problem description
    <- user   sees problem list
    <- user   is logged in
    
    Supervisor modifies team's score
    <- client displays verification of team score modification
    <- server sends verification of score modification to client
    <- server changes team's score
    <- server verifies user is supervisor
    <- client requests server to change a team's score
    <- user   requests client to change a team's score
    <- user   is logged in as supervisor
    <- user   sees scores
    
    Supervisor sees current runs
    <- client displays list of current runs
    <- server sends list of current runs
    <- client requests server for current runs
    <- user   requests client for current runs
    <- user   is logged in as supervisor
    
    Supervisor kills malfunctioning run
    <- client displays verification of dead process
    <- server sends verification of dead process
    <- server kills process
    <- server verifies user is supervisor
    <- client requests server to kill run
    <- user   requests client to kill run
    <- user   sees current runs
    <- user   is logged in as supervisor
